popup = myPopups)%>%
# addCircleMarkers(lng = ~my_data$long, lat = ~my_data$lat,
#                  label = ~paste("Country:", my_data$Country),
#                  popup = ~paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3]),
#                  fillOpacity = 0.25,
#                  color = ~col,
#                  stroke = FALSE)
addLegend(pal = pal, values = my_data[,2], title = "CPI (2015)", position = "bottomleft")
leaflet(WorldCountry) %>%
addProviderTiles() %>%
addPolygons(fillColor = pal(my_data[,2]),
weight = 1,
opacity = 1,
color = "black",
fillOpacity = 0.8,
highlight = highlightOptions(weight = 3,
color = "white",
fillOpacity = 0.8,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
# addCircleMarkers(lng = ~my_data$long, lat = ~my_data$lat,
#                  label = ~paste("Country:", my_data$Country),
#                  popup = ~paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3]),
#                  fillOpacity = 0.25,
#                  color = ~col,
#                  stroke = FALSE)
addLegend(pal = pal, values = my_data[,2], title = "CPI (2015)", position = "bottomleft")
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
latlong <- read.csv("C:\\Users\\PRAJITA\\Desktop\\IntroToDataScience\\RShinyApp\\latlong.csv")
names(latlong) <- c("lat", "long", "Country")
my_data <- left_join (data, latlong, by = "Country")
names(data) <- c("Country", "CPI Index (2015)", "GDP per Capita (2015)")
names(my_data) <- c("Country", "CPI Index (2015)", "GDP per Capita (2015)", "lat", "long")
my_data$col <- ifelse(Corruption$CPI.2015 < 29, "red", "blue")
shapeurl <- "https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json"
WorldCountry <- geojson_read(shapeurl, what = "sp")
pal <- colorBin("viridis", domain = my_data[,2])
myLabels <- paste("<strong>", "Country:" , my_data$Country)
myPopups <- paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3])
Lowest_CPI_Countries <- filter(data, data[,2] < 19)
Lowest_GDP_Countries <- filter(data, data[,3] < 550)
Highest_CPI_Countries <- filter(data, data[,2] > 80)
Highest_GDP_Countries <- filter(data, data[,3] > 50720)
leaflet(WorldCountry) %>%
addProviderTiles() %>%
addPolygons(fillColor = pal(my_data[,2]),
weight = 1,
opacity = 1,
color = "black",
fillOpacity = 0.8,
highlight = highlightOptions(weight = 3,
color = "white",
fillOpacity = 0.8,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
# addCircleMarkers(lng = ~my_data$long, lat = ~my_data$lat,
#                  label = ~paste("Country:", my_data$Country),
#                  popup = ~paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3]),
#                  fillOpacity = 0.25,
#                  color = ~col,
#                  stroke = FALSE)
addLegend(pal = pal, values = my_data[,2], title = "CPI (2015)", position = "bottomleft")
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
latlong <- read.csv("C:\\Users\\PRAJITA\\Desktop\\IntroToDataScience\\RShinyApp\\latlong.csv")
names(latlong) <- c("lat", "long", "Country")
my_data <- left_join (data, latlong, by = "Country")
names(data) <- c("Country", "CPI Index (2015)", "GDP per Capita (2015)")
names(my_data) <- c("Country", "CPI Index (2015)", "GDP per Capita (2015)", "lat", "long")
my_data$col <- ifelse(Corruption$CPI.2015 < 29, "red", "blue")
shapeurl <- "https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json"
WorldCountry <- geojson_read(shapeurl, what = "sp")
pal <- colorBin("viridis", domain = my_data[,2])
myLabels <- paste("<strong>", "Country:" , my_data$Country)
myPopups <- paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3])
Lowest_CPI_Countries <- filter(data, data[,2] < 19)
Lowest_GDP_Countries <- filter(data, data[,3] < 550)
Highest_CPI_Countries <- filter(data, data[,2] > 80)
Highest_GDP_Countries <- filter(data, data[,3] > 50720)
leaflet(WorldCountry) %>%
addTiles() %>%
addPolygons(fillColor = pal(my_data[,2]),
weight = 1,
opacity = 1,
color = "black",
fillOpacity = 0.8,
highlight = highlightOptions(weight = 3,
color = "white",
fillOpacity = 0.8,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
# addCircleMarkers(lng = ~my_data$long, lat = ~my_data$lat,
#                  label = ~paste("Country:", my_data$Country),
#                  popup = ~paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3]),
#                  fillOpacity = 0.25,
#                  color = ~col,
#                  stroke = FALSE)
addLegend(pal = pal, values = my_data[,2], title = "CPI (2015)", position = "bottomleft")
runApp()
runApp()
install.packages("factoextra")
install.packages("dplyr")
install.packages("ggplot2")
library(factoextra)  ## Used for PCA visualizations
library(dplyr)  ## Used for data cleaning
library(ggplot2)
#Question 1
data(USArrests)
head(USArrests)
P <- prcomp(USArrests, scale = TRUE)
P
biplot(P, scale = 0, cex = 0.7)
#From the biplot, there is significantly higher crime and population in California
#compared to that of Iowa since Iowa falls on the opposite side of the biplot.
#Question 2
data(decathlon2)
head(decathlon2)
P <- prcomp(decathlon, scale = TRUE)
decathlon <-select (decathlon2, 2:10)
fviz_eig(P, addlabels = TRUE)
shiny::runApp()
view(my_data)
View(my_data)
runApp()
runApp()
View(data)
runApp()
View(WorldCountry)
View(CountryCorruption)
WorldCountry <- geojson_read(shapeurl, what = "sp")
CountryCorruption <- left_join(data.frame(Name = WorldCountry$name), data, by = c("Name" ="Country"))
View(CountryCorruption)
runApp()
head(CountryCorruption)
runApp()
runApp()
WorldCountry <- geojson_read(shapeurl, what = "sp")
CountryCorruption <- left_join(data.frame(Name = WorldCountry$name), data, by = c("Name" ="Country"))
View(CountryCorruption)
View(data)
runApp()
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
#data <- mutate(data, Country = ifelse(Country == "Russian Federation", dist * 100, dist)
data %>%
mutate(Country=replace(Country, Country=="Russian Federation", "Russia")) %>%
as.data.frame()
View(data)
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
data<-data.frame("Russia","29", "	9478.80")
names(data)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, data)
view(newdf)
View(newdf)
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(df)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
df2<-data.frame("United States of America","76", "56115.72")
de2(df2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (df2, de2)
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
df2<-data.frame("United States of America","76", "56115.72")
de2 <-data.frame("Russia","29", "	9478.80")
de2(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (df2, de2)
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
View(data)
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
data <- myData[-c(147, -114), ]
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
data <- data[-c(147, -114), ]
data <- data[-c(147, -114), ]
data <- data[-c(147, 114), ]
View(data)
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
View(my_data)
f <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
data <- data[-c(147, 114), ]
names(my_data) <- c("Country", "CPI Index (2015)", "GDP per Capita (2015)")
View(my_data)
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
data <- data[-c(147, 114), ]
names(data) <- c("Country", "CPI Index (2015)", "GDP per Capita (2015)")
View(data)
runApp()
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
my_data <- data[-c(147, 114), ]
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
my_data <- data[-c(147, 114), ]
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
my_data <- data[-c(147, 114), ]
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
my_data <- data[-c(147, 114), ]
View(my_data)
runApp()
View(my_data)
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
View(CountryCorruption)
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
my_data <- data[-c(147, 114), ]
shapeurl <- "https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json"
WorldCountry <- geojson_read(shapeurl, what = "sp")
CountryCorruption <- left_join(data.frame(Name = WorldCountry$name), my_data, by = c("Name" ="Country"))
df <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country","CPI.2015", "GDP.per.capita")
newdf  <- rbind (df, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country","CPI.2015", "GDP.per.capita")
data  <- rbind (newdf, de2)
View(CountryCorruption)
runApp()
runApp()
View(my_data)
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
names(data) <- c("Country", "CPI (2015)", "GDP per capita (2015)")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
newdf  <- rbind (data, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
my_data  <- rbind (newdf, de2)
my_data <- my_data[-c(147, 114), ]
View(my_data)
runApp()
runApp()
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
names(data) <- c("Country", "CPI (2015)", "GDP per capita (2015)")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
newdf  <- rbind (data, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
my_data  <- rbind (newdf, de2)
my_data <- my_data[-c(147, 114), ]
shapeurl <- "https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json"
WorldCountry <- geojson_read(shapeurl, what = "sp")
CountryCorruption <- left_join(data.frame(Name = WorldCountry$name), data, by = c("Name" ="Country"))
CountryCorruption[,1] <- as.numeric(as.character(CountryCorruption[,1]))
pal <- colorBin("viridis", domain = CountryCorruption[,2])
myLabels <- paste("<strong>", "Country:" , WorldCountry$name)
myPopups <- paste("CPI (2015):", CountryCorruption[,2], "<br/>", "GDP per capita (2015):", CountryCorruption[,3])
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
names(data) <- c("Country", "CPI (2015)", "GDP per capita (2015)")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
newdf  <- rbind (data, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
my_data  <- rbind (newdf, de2)
my_data <- my_data[-c(147, 114), ]
shapeurl <- "https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json"
WorldCountry <- geojson_read(shapeurl, what = "sp")
CountryCorruption <- left_join(data.frame(Name = WorldCountry$name), data, by = c("Name" ="Country"))
CountryCorruption[,1] <- as.numeric(as.character(CountryCorruption[,1]))
pal <- colorBin("viridis", domain = CountryCorruption[,2])
myLabels <- paste("<strong>", "Country:" , WorldCountry$name)
myPopups <- paste("CPI (2015):", CountryCorruption[,2], "<br/>", "GDP per capita (2015):", CountryCorruption[,3])
map <- leaflet(WorldCountry) %>%
addTiles() %>%
addPolygons(fillColor = pal(CountryCorruption[,2]),
weight = 1,
opacity = 1,
color = "black",
fillOpacity = 0.8,
highlight = highlightOptions(weight = 3,
color = "white",
fillOpacity = 0.8,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
# addCircleMarkers(lng = ~my_data$long, lat = ~my_data$lat,
#                  label = ~paste("Country:", my_data$Country),
#                  popup = ~paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3]),
#                  fillOpacity = 0.25,
#                  color = ~col,
#                  stroke = FALSE)
addLegend(pal = pal, values = CountryCorruption[,2], title = "CPI (2015)", position = "bottomleft")
map
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
names(data) <- c("Country", "CPI (2015)", "GDP per capita (2015)")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
newdf  <- rbind (data, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
my_data  <- rbind (newdf, de2)
my_data <- my_data[-c(147, 114), ]
shapeurl <- "https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json"
WorldCountry <- geojson_read(shapeurl, what = "sp")
CountryCorruption <- left_join(data.frame(Name = WorldCountry$name), my_data, by = c("Name" ="Country"))
CountryCorruption[,1] <- as.numeric(as.character(CountryCorruption[,1]))
pal <- colorBin("viridis", domain = CountryCorruption[,2])
myLabels <- paste("<strong>", "Country:" , WorldCountry$name)
myPopups <- paste("CPI (2015):", CountryCorruption[,2], "<br/>", "GDP per capita (2015):", CountryCorruption[,3])
map <- leaflet(WorldCountry) %>%
addTiles() %>%
addPolygons(fillColor = pal(CountryCorruption[,2]),
weight = 1,
opacity = 1,
color = "black",
fillOpacity = 0.8,
highlight = highlightOptions(weight = 3,
color = "white",
fillOpacity = 0.8,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
# addCircleMarkers(lng = ~my_data$long, lat = ~my_data$lat,
#                  label = ~paste("Country:", my_data$Country),
#                  popup = ~paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3]),
#                  fillOpacity = 0.25,
#                  color = ~col,
#                  stroke = FALSE)
addLegend(pal = pal, values = CountryCorruption[,2], title = "CPI (2015)", position = "bottomleft")
map
view(CountryCorruption)
View(CountryCorruption)
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
names(data) <- c("Country", "CPI (2015)", "GDP per capita (2015)")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
newdf  <- rbind (data, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
my_data  <- rbind (newdf, de2)
my_data <-  my_data[-c(147, 114), ]
shapeurl <- "https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json"
WorldCountry <- geojson_read(shapeurl, what = "sp")
CountryCorruption <- left_join(data.frame(Name = WorldCountry$name), my_data, by = c("Name" ="Country"))
pal <- colorBin("viridis", domain = CountryCorruption[,2])
myLabels <- paste("<strong>", "Country:" , WorldCountry$name)
myPopups <- paste("CPI (2015):", CountryCorruption[,2], "<br/>", "GDP per capita (2015):", CountryCorruption[,3])
map <- leaflet(WorldCountry) %>%
addTiles() %>%
addPolygons(fillColor = pal(CountryCorruption[,2]),
weight = 1,
opacity = 1,
color = "black",
fillOpacity = 0.8,
highlight = highlightOptions(weight = 3,
color = "white",
fillOpacity = 0.8,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
# addCircleMarkers(lng = ~my_data$long, lat = ~my_data$lat,
#                  label = ~paste("Country:", my_data$Country),
#                  popup = ~paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3]),
#                  fillOpacity = 0.25,
#                  color = ~col,
#                  stroke = FALSE)
addLegend(pal = pal, values = CountryCorruption[,2], title = "CPI (2015)", position = "bottomleft")
map
View(CountryCorruption)
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc")
names(data) <- c("Country", "CPI (2015)", "GDP per capita (2015)")
de <-data.frame("Russia","29", "	9478.80")
names(de)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
newdf  <- rbind (data, de)
de2<-data.frame("United States of America","76", "56115.72")
names(de2)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
my_data  <- rbind (newdf, de2)
my_data <-  my_data[-c(147, 114), ]
shapeurl <- "https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json"
WorldCountry <- geojson_read(shapeurl, what = "sp")
CountryCorruption1 <- left_join(data.frame(Name = WorldCountry$name), my_data, by = c("Name" ="Country"))
pal <- colorBin("viridis", domain = CountryCorruption1[,2])
myLabels <- paste("<strong>", "Country:" , WorldCountry$name)
myPopups <- paste("CPI (2015):", CountryCorruption1[,2], "<br/>", "GDP per capita (2015):", CountryCorruption1[,3])
map <- leaflet(WorldCountry) %>%
addTiles() %>%
addPolygons(fillColor = pal(CountryCorruption1[,2]),
weight = 1,
opacity = 1,
color = "black",
fillOpacity = 0.8,
highlight = highlightOptions(weight = 3,
color = "white",
fillOpacity = 0.8,
bringToFront = TRUE),
label = lapply(myLabels, HTML),
popup = myPopups)%>%
# addCircleMarkers(lng = ~my_data$long, lat = ~my_data$lat,
#                  label = ~paste("Country:", my_data$Country),
#                  popup = ~paste("CPI (2015):", my_data[,2], "<br/>", "GDP per capita (2015):", my_data[,3]),
#                  fillOpacity = 0.25,
#                  color = ~col,
#                  stroke = FALSE)
addLegend(pal = pal, values = CountryCorruption1[,2], title = "CPI (2015)", position = "bottomleft")
map
View(CountryCorruption1)
runApp()
shiny::runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='niraulap',
token='1D5F424E8DEAB3FCA0AA8026972A8132',
secret='<SECRET>')
rsconnect::deployApp('C:\\Users\\PRAJITA\\Documents\\corruption2\\corruption2.Rproj')
rsconnect::deployApp('C:\\Users\\PRAJITA\\Documents\\corruption2')
rsconnect::setAccountInfo(name='niraulap',
token='1D5F424E8DEAB3FCA0AA8026972A8132',
secret='<SECRET>')
library(rsconnect)
rsconnect::deployApp('C:\\Users\\PRAJITA\\Documents\\corruption2')
library(rsconnect)
rsconnect::setAccountInfo(name='niraulap',
token='1D5F424E8DEAB3FCA0AA8026972A8132',
secret='gP4090xJgjljC6Q2hkIWiHwQEEIwLQ7uSs7cZa3k')
rsconnect::deployApp('C:\\Users\\PRAJITA\\Documents\\corruption2')
shiny::runApp()
View(WorldCountry)
WorldCountry@data[["name"]]
View(my_data)
str(my_data)
runApp()
#Data Wrangling
data <- read.csv("https://query.data.world/s/z4eoe7dmv2yxlnk3ccb43givzghipc", stringsAsFactors = FALSE)
names(data) <- c("Country", "CPI (2015)", "GDP per capita (2015)")
de <-data.frame("Russia",29, 9478.80)
names(de)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
newdf  <- rbind (data, de)
de2<-data.frame("United States of America", 76, 56115.72)
names(de2)<-c("Country", "CPI (2015)", "GDP per capita (2015)")
my_data  <- rbind (newdf, de2)
my_data <- my_data[-c(147, 114), ]
#Preperaring for the map
shapeurl <- "https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json"
WorldCountry <- geojson_read(shapeurl, what = "sp")
CountryCorruption <- full_join(data.frame(Name = WorldCountry$name), data, by = c("Name" ="Country"))
CountryCorruption[,1] <- as.numeric(as.character(CountryCorruption[,1]))
pal <- colorBin("viridis", domain = CountryCorruption[,2])
myLabels <- paste("<strong>", "Country:" , WorldCountry$name)
myPopups <- paste("CPI (2015):", CountryCorruption[,2], "<br/>", "GDP per capita (2015):", CountryCorruption[,3])
runApp()
View(CountryCorruption)
CountryCorruption <- left_join(data.frame(Name = as.character(WorldCountry$name)), data, by = c("Name" ="Country"))
(data.frame(Name = as.character(WorldCountry$name))
)
runApp()
runApp('C:/Users/PRAJITA/Downloads')
